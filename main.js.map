{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/card-view/card-view.component.css","webpack:///./src/app/card-view/card-view.component.html","webpack:///./src/app/card-view/card-view.component.ts","webpack:///./src/app/got.service.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/not-found/not-found.component.css","webpack:///./src/app/not-found/not-found.component.html","webpack:///./src/app/not-found/not-found.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"#header{\\n    padding:0 7px;\\n    border-radius: 10px;\\n    color:#000000;\\n    font-weight: bolder;\\n    font-size:2em;\\n}\\n.bg-black{\\n    background-color:#000000;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0lBQ2IsbUJBQW1CO0lBQ25CLGFBQWE7SUFDYixtQkFBbUI7SUFDbkIsYUFBYTtBQUNqQjtBQUNBO0lBQ0ksd0JBQXdCO0FBQzVCIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjaGVhZGVye1xuICAgIHBhZGRpbmc6MCA3cHg7XG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgICBjb2xvcjojMDAwMDAwO1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkZXI7XG4gICAgZm9udC1zaXplOjJlbTtcbn1cbi5iZy1ibGFja3tcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiMwMDAwMDA7XG59Il19 */\"","module.exports = \"<!-- header starts here -->\\n<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-black sticky-top\\\">\\n  <a id=\\\"header\\\" class=\\\"navbar-brand bg-warning offset-lg-1\\\" [routerLink]=\\\"['/home']\\\">\\n    <span style=\\\"color:#123363;\\\">\\n      <b>Game</b>&nbsp;</span>Of\\n    <span style=\\\"color:#C81900;\\\">\\n      <b>Thrones</b>\\n    </span>\\n  </a>\\n</nav>\\n<!-- header ends here -->\\n<!-- cover image starts here -->\\n<div class=\\\"container-full\\\">\\n  <img class=\\\"img-responsive\\\" src=\\\"./assets/images/cover.jpg\\\" style=\\\"width:100%; height:auto;\\\">\\n</div>\\n<!-- cover image ends here -->\\n<br>\\n<br>\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n}\n","//importing service\nimport {GotService} from './got.service';\n//importing orderBy pipe\nimport { OrderModule } from 'ngx-order-pipe';\n//importing formsmodule\nimport { FormsModule } from \"@angular/forms\";\nimport { BrowserModule } from '@angular/platform-browser';\n//importing routermodule for routing\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\n\n//importing all the components\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { CardViewComponent } from './card-view/card-view.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    CardViewComponent,\n    NotFoundComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    OrderModule,\n    HttpClientModule,\n    RouterModule.forRoot([\n      {path:'home',component:HomeComponent},\n      //redirecting to home if nothing is suffixed\n      {path:'',redirectTo:'home',pathMatch:'full'},\n      // using view and redirect paths interchangably in order to click api links and get data using each other view\n      {path:'view/:url',component:CardViewComponent},\n      {path:'redirect/:url',component:CardViewComponent},\n      //if no path is found\n      {path:'**',component:NotFoundComponent}\n    ])\n  ],\n  providers: [GotService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".col-12{\\n    word-break:break-all;\\n}\\n.underline{\\n    color:#FFFFFF;\\n    text-decoration: underline;\\n    cursor:pointer;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2FyZC12aWV3L2NhcmQtdmlldy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksb0JBQW9CO0FBQ3hCO0FBQ0E7SUFDSSxhQUFhO0lBQ2IsMEJBQTBCO0lBQzFCLGNBQWM7QUFDbEIiLCJmaWxlIjoic3JjL2FwcC9jYXJkLXZpZXcvY2FyZC12aWV3LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29sLTEye1xuICAgIHdvcmQtYnJlYWs6YnJlYWstYWxsO1xufVxuLnVuZGVybGluZXtcbiAgICBjb2xvcjojRkZGRkZGO1xuICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICAgIGN1cnNvcjpwb2ludGVyO1xufSJdfQ== */\"","module.exports = \"<!-- loading animation before the data loads -->\\n<div class=\\\"container top-buffer d-flex justify-content-center\\\" *ngIf=\\\"card==undefined\\\">\\n  <div class=\\\"loader\\\"></div>\\n</div>\\n<!-- the card information after the card gets defined -->\\n<div class=\\\"container\\\" *ngIf=\\\"card!=undefined\\\">\\n  <div class=\\\"container text-white\\\">\\n    <!-- defining only character details -->\\n    <div class=\\\"row\\\" *ngIf=\\\"card.gender\\\">\\n      <div class=\\\"col d-flex justify-content-center text-success\\\">\\n        <h2>CHARACTER</h2>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"container text-white\\\">\\n    <!-- defining only book details -->\\n    <div class=\\\"row\\\" *ngIf=\\\"card.isbn\\\">\\n      <div class=\\\"col d-flex justify-content-center text-danger\\\">\\n        <h2>BOOK</h2>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"container text-white\\\">\\n    <!-- defining only houses details -->\\n    <div class=\\\"row\\\" *ngIf=\\\"card.region\\\">\\n      <div class=\\\"col d-flex justify-content-center text-warning\\\">\\n        <h2>HOUSE</h2>\\n      </div>\\n    </div>\\n  </div>\\n  <!-- goback button -->\\n  <div class=\\\"container\\\">\\n    <div>\\n      <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" (click)=\\\"goBackToPreviousPage()\\\">Go Back</button>\\n    </div>\\n  </div>\\n  <br>\\n  <div class=\\\"container text-white\\\">\\n    <!-- rows for character url -->\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-lg-3 col-12\\\">\\n        <h4>Name:</h4>\\n      </div>\\n      <div class=\\\"col-lg-7 col-12\\\" *ngIf=\\\"card.name\\\">\\n        {{card.name}}\\n      </div>\\n      <div class=\\\"col-lg-7 col-12 text-muted\\\" *ngIf=\\\"card.name==''\\\">\\n        Not Available\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\" *ngIf=\\\"card.gender\\\">\\n      <div class=\\\"col-lg-3 col-12\\\">\\n        <h4>Gender:</h4>\\n      </div>\\n      <div class=\\\"col-lg-7 col-12\\\">\\n        {{card.gender}}\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\" *ngIf=\\\"card.born\\\">\\n      <div class=\\\"col-lg-3 col-12\\\">\\n        <h4>Date of Birth:</h4>\\n      </div>\\n      <div class=\\\"col-lg-7 col-12\\\">\\n        {{card.born}}\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\" *ngIf=\\\"card.died\\\">\\n      <div class=\\\"col-lg-3 col-12\\\">\\n        <h4>Died:</h4>\\n      </div>\\n      <div class=\\\"col-lg-7 col-12\\\">\\n        {{card.died}}\\n      </div>\\n    </div>\\n    <!-- checking if array is available and there is not only blank element present in the array -->\\n    <div class=\\\"row\\\" *ngIf=\\\"card.titles && card.titles[0]\\\">\\n      <div class=\\\"col-lg-3 col-12\\\">\\n        <h4>Titles:</h4>\\n      </div>\\n      <div class=\\\"col-lg-7 col-12\\\">\\n        <span *ngFor=\\\"let title of card.titles; let isLast=last\\\">{{title}}{{isLast?'':','}}</span>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\" *ngIf=\\\"card.aliases && card.aliases[0]\\\">\\n      <div class=\\\"col-lg-3 col-12\\\">\\n        <h4>Aliases:</h4>\\n      </div>\\n      <div class=\\\"col-lg-7 col-12\\\">\\n        <span *ngFor=\\\"let alias of card.aliases; let isLast=last\\\">{{alias}}{{isLast?'':','}}</span>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\" *ngIf=\\\"card.father\\\">\\n      <div class=\\\"col-lg-3 col-12\\\">\\n        <h4>Father:</h4>\\n      </div>\\n      <!-- if page is loaded on view path -->\\n      <div class=\\\"col-lg-7 col-12\\\" *ngIf=\\\"router.url.split('/')[1]=='view'\\\">\\n        <!-- by clicking on api link present on the page, the next view will be rendered on redirect path -->\\n        <a class=\\\"underline\\\" [routerLink]=\\\"['/redirect',card.father.split('api/').pop()]\\\">{{card.father}}</a>\\n      </div>\\n      <!-- if page is loaded on redirect path -->\\n      <div class=\\\"col-lg-7 col-12\\\" *ngIf=\\\"router.url.split('/')[1]=='redirect'\\\">\\n        <!-- by clicking on api link link present on the page, the next view will be render on view path -->\\n        <a class=\\\"underline\\\" [routerLink]=\\\"['/view',card.father.split('api/').pop()]\\\">{{card.father}}</a>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\" *ngIf=\\\"card.mother\\\">\\n      <div class=\\\"col-lg-3 col-12\\\">\\n        <h4>Mother:</h4>\\n      </div>\\n      <div class=\\\"col-lg-7 col-12\\\" *ngIf=\\\"router.url.split('/')[1]=='view'\\\">\\n        <a class=\\\"underline\\\" [routerLink]=\\\"['/redirect',card.mother.split('api/').pop()]\\\">{{card.mother}}</a>\\n      </div>\\n      <div class=\\\"col-lg-7 col-12\\\" *ngIf=\\\"router.url.split('/')[1]=='redirect'\\\">\\n        <a class=\\\"underline\\\" [routerLink]=\\\"['/view',card.mother.split('api/').pop()]\\\">{{card.mother}}</a>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\" *ngIf=\\\"card.spouse\\\">\\n      <div class=\\\"col-lg-3 col-12\\\">\\n        <h4>Spouse:</h4>\\n      </div>\\n      <div class=\\\"col-lg-7 col-12\\\" *ngIf=\\\"router.url.split('/')[1]=='view'\\\">\\n        <a class=\\\"underline\\\" [routerLink]=\\\"['/redirect',card.spouse.split('api/').pop()]\\\">{{card.spouse}}</a>\\n      </div>\\n      <div class=\\\"col-lg-7 col-12\\\" *ngIf=\\\"router.url.split('/')[1]=='redirect'\\\">\\n        <a class=\\\"underline\\\" [routerLink]=\\\"['/view',card.spouse.split('api/').pop()]\\\">{{card.spouse}}</a>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\" *ngIf=\\\"card.allegiances && card.allegiances[0]\\\">\\n      <div class=\\\"col-lg-3 col-12\\\">\\n        <h4>Allegiances:</h4>\\n      </div>\\n      <div class=\\\"col-lg-7 col-12\\\" *ngIf=\\\"router.url.split('/')[1]=='view'\\\">\\n        <a class=\\\"underline\\\" [routerLink]=\\\"['/redirect',allegiance.split('api/').pop()]\\\" *ngFor=\\\"let allegiance of card.allegiances; let isLast=last\\\">{{allegiance}}{{isLast?'':','}}\\n          <br>\\n        </a>\\n      </div>\\n      <div class=\\\"col-lg-7 col-12\\\" *ngIf=\\\"router.url.split('/')[1]=='redirect'\\\">\\n        <a class=\\\"underline\\\" [routerLink]=\\\"['/view',allegiance.split('api/').pop()]\\\" *ngFor=\\\"let allegiance of card.allegiances; let isLast=last\\\">{{allegiance}}{{isLast?'':','}}\\n          <br>\\n        </a>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\" *ngIf=\\\"card.books && card.books[0]\\\">\\n      <div class=\\\"col-lg-3 col-12\\\">\\n        <h4>Books:</h4>\\n      </div>\\n      <div class=\\\"col-lg-7 col-12\\\" *ngIf=\\\"router.url.split('/')[1]=='view'\\\">\\n        <a class=\\\"underline\\\" [routerLink]=\\\"['/redirect',book.split('api/').pop()]\\\" *ngFor=\\\"let book of card.books; let isLast=last\\\">{{book}}{{isLast?'':','}}\\n          <br>\\n        </a>\\n      </div>\\n      <div class=\\\"col-lg-7 col-12\\\" *ngIf=\\\"router.url.split('/')[1]=='redirect'\\\">\\n        <a class=\\\"underline\\\" [routerLink]=\\\"['/view',book.split('api/').pop()]\\\" *ngFor=\\\"let book of card.books; let isLast=last\\\">{{book}}{{isLast?'':','}}\\n          <br>\\n        </a>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\" *ngIf=\\\"card.povbooks && card.povbooks[0]\\\">\\n      <div class=\\\"col-lg-3 col-12\\\">\\n        <h4>Pov Books:</h4>\\n      </div>\\n      <div class=\\\"col-lg-7 col-12\\\" *ngIf=\\\"router.url.split('/')[1]=='view'\\\">\\n        <a class=\\\"underline\\\" [routerLink]=\\\"['/redirect',povbook.split('api/').pop()]\\\" *ngFor=\\\"let povbook of card.povbooks; let isLast=last\\\">{{povbook}}{{isLast?'':','}}\\n          <br>\\n        </a>\\n      </div>\\n      <div class=\\\"col-lg-7 col-12\\\" *ngIf=\\\"router.url.split('/')[1]=='redirect'\\\">\\n        <a class=\\\"underline\\\" [routerLink]=\\\"['/view',povbook.split('api/').pop()]\\\" *ngFor=\\\"let povbook of card.povbooks; let isLast=last\\\">{{povbook}}{{isLast?'':','}}\\n          <br>\\n        </a>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\" *ngIf=\\\"card.tvseries && card.tvseries[0]\\\">\\n      <div class=\\\"col-lg-3 col-12\\\">\\n        <h4>Tv Series:</h4>\\n      </div>\\n      <div class=\\\"col-lg-7 col-12\\\">\\n        <span *ngFor=\\\"let tv of card.tvseries; let isLast=last\\\">{{tv}}{{isLast?'':','}}\\n        </span>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\" *ngIf=\\\"card.playedby && card.playedby[0]\\\">\\n      <div class=\\\"col-lg-3 col-12\\\">\\n        <h4>Played By:</h4>\\n      </div>\\n      <div class=\\\"col-lg-7 col-12\\\">\\n        <span *ngFor=\\\"let play of card.playedby; let isLast=last\\\">{{play}}{{isLast?'':','}}\\n        </span>\\n      </div>\\n    </div>\\n    <!-- rows for books url -->\\n    <div class=\\\"row\\\" *ngIf=\\\"card.isbn\\\">\\n      <div class=\\\"col-lg-3 col-12\\\">\\n        <h4>Isbn Number:</h4>\\n      </div>\\n      <div class=\\\"col-lg-7 col-12\\\">\\n        {{card.isbn}}\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\" *ngIf=\\\"card.authors && card.authors[0]\\\">\\n      <div class=\\\"col-lg-3 col-12\\\">\\n        <h4>Authors:</h4>\\n      </div>\\n      <div class=\\\"col-lg-7 col-12\\\">\\n        <span *ngFor=\\\"let author of card.authors; let isLast=last\\\">{{author}}{{isLast?'':','}}</span>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\" *ngIf=\\\"card.numberOfPages\\\">\\n      <div class=\\\"col-lg-3 col-12\\\">\\n        <h4>Pages:</h4>\\n      </div>\\n      <div class=\\\"col-lg-7 col-12\\\">\\n        {{card.numberOfPages}}\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\" *ngIf=\\\"card.publisher\\\">\\n      <div class=\\\"col-lg-3 col-12\\\">\\n        <h4>Publisher:</h4>\\n      </div>\\n      <div class=\\\"col-lg-7 col-12\\\">\\n        {{card.publisher}}\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\" *ngIf=\\\"card.country\\\">\\n      <div class=\\\"col-lg-3 col-12\\\">\\n        <h4>Country:</h4>\\n      </div>\\n      <div class=\\\"col-lg-7 col-12\\\">\\n        {{card.country}}\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\" *ngIf=\\\"card.mediaType\\\">\\n      <div class=\\\"col-lg-3 col-12\\\">\\n        <h4>Media Type:</h4>\\n      </div>\\n      <div class=\\\"col-lg-7 col-12\\\">\\n        {{card.mediaType}}\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\" *ngIf=\\\"card.released\\\">\\n      <div class=\\\"col-lg-3 col-12\\\">\\n        <h4>Release Date:</h4>\\n      </div>\\n      <div class=\\\"col-lg-7 col-12\\\">\\n        {{card.released | date}}\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\" *ngIf=\\\"card.characters && card.characters[0]\\\">\\n      <div class=\\\"col-lg-3 col-12\\\">\\n        <h4>Characters:</h4>\\n      </div>\\n      <div class=\\\"col-lg-7 col-12\\\" *ngIf=\\\"router.url.split('/')[1]=='view'\\\">\\n        <a class=\\\"underline\\\" [routerLink]=\\\"['/redirect',character.split('api/').pop()]\\\" *ngFor=\\\"let character of card.characters | slice:0:show; let isLast=last\\\">{{character}}{{isLast?'':','}}\\n          <br>\\n        </a>\\n        <!-- by clicking this, 5 array elements will keep extending in the view for characters key in books card only -->\\n        <a class=\\\"underline text-primary\\\" (click)=\\\"show=show+5\\\" *ngIf=\\\"show < card.characters.length\\\">show more (+5)</a>\\n      </div>\\n      <div class=\\\"col-lg-7 col-12\\\" *ngIf=\\\"router.url.split('/')[1]=='redirect'\\\">\\n        <a class=\\\"underline\\\" [routerLink]=\\\"['/view',character.split('api/').pop()]\\\" *ngFor=\\\"let character of card.characters | slice:0:show; let isLast=last\\\">{{character}}{{isLast?'':','}}\\n          <br>\\n        </a>\\n        <a class=\\\"underline text-primary\\\" (click)=\\\"show=show+5\\\" *ngIf=\\\"show < card.characters.length\\\">show more (+5)</a>\\n      </div>\\n    </div>\\n    <div *ngIf=\\\"card.characters && card.characters[0]\\\">\\n      <br>\\n    </div>\\n    <div class=\\\"row\\\" *ngIf=\\\"card.povCharacters && card.povCharacters[0]\\\">\\n      <div class=\\\"col-lg-3 col-12\\\">\\n        <h4>POV Characters:</h4>\\n      </div>\\n      <div class=\\\"col-lg-7 col-12\\\" *ngIf=\\\"router.url.split('/')[1]=='view'\\\">\\n        <a class=\\\"underline\\\" [routerLink]=\\\"['/redirect',character.split('api/').pop()]\\\" *ngFor=\\\"let character of card.povCharacters; let isLast=last\\\">{{character}}{{isLast?'':','}}\\n          <br>\\n        </a>\\n      </div>\\n      <div class=\\\"col-lg-7 col-12\\\" *ngIf=\\\"router.url.split('/')[1]=='redirect'\\\">\\n        <a class=\\\"underline\\\" [routerLink]=\\\"['/view',character.split('api/').pop()]\\\" *ngFor=\\\"let character of card.povCharacters; let isLast=last\\\">{{character}}{{isLast?'':','}}\\n          <br>\\n        </a>\\n      </div>\\n    </div>\\n    <!-- rows for houses url -->\\n    <div class=\\\"row\\\" *ngIf=\\\"card.region\\\">\\n      <div class=\\\"col-lg-3 col-12\\\">\\n        <h4>Region:</h4>\\n      </div>\\n      <div class=\\\"col-lg-7 col-12\\\">\\n        {{card.region}}\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\" *ngIf=\\\"card.coatOfArms\\\">\\n      <div class=\\\"col-lg-3 col-12\\\">\\n        <h4>Coat Of Arms:</h4>\\n      </div>\\n      <div class=\\\"col-lg-7 col-12\\\">\\n        {{card.coatOfArms}}\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\" *ngIf=\\\"card.words\\\">\\n      <div class=\\\"col-lg-3 col-12\\\">\\n        <h4>Words:</h4>\\n      </div>\\n      <div class=\\\"col-lg-7 col-12\\\">\\n        {{card.words}}\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\" *ngIf=\\\"card.seats && card.seats[0]\\\">\\n      <div class=\\\"col-lg-3 col-12\\\">\\n        <h4>Seats:</h4>\\n      </div>\\n      <div class=\\\"col-lg-7 col-12\\\">\\n        <span *ngFor=\\\"let seat of card.seats; let isLast=last\\\">{{seat}}{{isLast?'':','}}\\n        </span>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\" *ngIf=\\\"card.currentLord\\\">\\n      <div class=\\\"col-lg-3 col-12\\\">\\n        <h4>Current Lord:</h4>\\n      </div>\\n      <div class=\\\"col-lg-7 col-12\\\" *ngIf=\\\"router.url.split('/')[1]=='view'\\\">\\n        <a class=\\\"underline\\\" [routerLink]=\\\"['/redirect',card.currentLord.split('api/').pop()]\\\">{{card.currentLord}}</a>\\n      </div>\\n      <div class=\\\"col-lg-7 col-12\\\" *ngIf=\\\"router.url.split('/')[1]=='redirect'\\\">\\n        <a class=\\\"underline\\\" [routerLink]=\\\"['/view',card.currentLord.split('api/').pop()]\\\">{{card.currentLord}}</a>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\" *ngIf=\\\"card.overLord\\\">\\n      <div class=\\\"col-lg-3 col-12\\\">\\n        <h4>Over Lord:</h4>\\n      </div>\\n      <div class=\\\"col-lg-7 col-12\\\" *ngIf=\\\"router.url.split('/')[1]=='view'\\\">\\n        <a class=\\\"underline\\\" [routerLink]=\\\"['/redirect',card.overLord.split('api/').pop()]\\\">{{card.overLord}}</a>\\n      </div>\\n      <div class=\\\"col-lg-7 col-12\\\" *ngIf=\\\"router.url.split('/')[1]=='redirect'\\\">\\n        <a class=\\\"underline\\\" [routerLink]=\\\"['/view',card.overLord.split('api/').pop()]\\\">{{card.overLord}}</a>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\" *ngIf=\\\"card.founded\\\">\\n      <div class=\\\"col-lg-3 col-12\\\">\\n        <h4>Founded:</h4>\\n      </div>\\n      <div class=\\\"col-lg-7 col-12\\\">\\n        {{card.founded}}\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\" *ngIf=\\\"card.founder\\\">\\n      <div class=\\\"col-lg-3 col-12\\\">\\n        <h4>Founder:</h4>\\n      </div>\\n      <div class=\\\"col-lg-7 col-12\\\" *ngIf=\\\"router.url.split('/')[1]=='view'\\\">\\n        <a class=\\\"underline\\\" [routerLink]=\\\"['/redirect',card.founder.split('api/').pop()]\\\">{{card.founder}}</a>\\n      </div>\\n      <div class=\\\"col-lg-7 col-12\\\" *ngIf=\\\"router.url.split('/')[1]=='redirect'\\\">\\n        <a class=\\\"underline\\\" [routerLink]=\\\"['/view',card.founder.split('api/').pop()]\\\">{{card.founder}}</a>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\" *ngIf=\\\"card.diedOut\\\">\\n      <div class=\\\"col-lg-3 col-12\\\">\\n        <h4>Died:</h4>\\n      </div>\\n      <div class=\\\"col-lg-7 col-12\\\">\\n        {{card.diedOut}}\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\" *ngIf=\\\"card.ancestralWeapons && card.ancestralWeapons[0]\\\">\\n      <div class=\\\"col-lg-3 col-12\\\">\\n        <h4>Ancestral Weapons:</h4>\\n      </div>\\n      <div class=\\\"col-lg-7 col-12\\\">\\n        <span *ngFor=\\\"let weapon of card.ancestralWeapons; let isLast=last\\\">{{weapon}}{{isLast?'':','}}\\n        </span>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\" *ngIf=\\\"card.cadetBranches && card.cadetBranches[0]\\\">\\n      <div class=\\\"col-lg-3 col-12\\\">\\n        <h4>Cadet Branches:</h4>\\n      </div>\\n      <div class=\\\"col-lg-7 col-12\\\" *ngIf=\\\"router.url.split('/')[1]=='view'\\\">\\n        <a class=\\\"underline\\\" [routerLink]=\\\"['/redirect',branch.split('api/').pop()]\\\" *ngFor=\\\"let branch of card.cadetBranches; let isLast=last\\\">{{branch}}{{isLast?'':','}}\\n          <br>\\n        </a>\\n      </div>\\n      <div class=\\\"col-lg-7 col-12\\\" *ngIf=\\\"router.url.split('/')[1]=='redirect'\\\">\\n        <a class=\\\"underline\\\" [routerLink]=\\\"['/view',branch.split('api/').pop()]\\\" *ngFor=\\\"let branch of card.cadetBranches; let isLast=last\\\">{{branch}}{{isLast?'':','}}\\n          <br>\\n        </a>\\n      </div>\\n    </div>\\n    <div *ngIf=\\\"card.cadetBranches && card.cadetBranches[0]\\\">\\n      <br>\\n    </div>\\n    <div class=\\\"row\\\" *ngIf=\\\"card.swornMembers && card.swornMembers[0]\\\">\\n      <div class=\\\"col-lg-3 col-12\\\">\\n        <h4>Sworn Members:</h4>\\n      </div>\\n      <div class=\\\"col-lg-7 col-12\\\" *ngIf=\\\"router.url.split('/')[1]=='view'\\\">\\n        <a class=\\\"underline\\\" [routerLink]=\\\"['/redirect',member.split('api/').pop()]\\\" *ngFor=\\\"let member of card.swornMembers; let isLast=last\\\">{{member}}{{isLast?'':','}}\\n          <br>\\n        </a>\\n      </div>\\n      <div class=\\\"col-lg-7 col-12\\\" *ngIf=\\\"router.url.split('/')[1]=='redirect'\\\">\\n        <a class=\\\"underline\\\" [routerLink]=\\\"['/view',member.split('api/').pop()]\\\" *ngFor=\\\"let member of card.swornMembers; let isLast=last\\\">{{member}}{{isLast?'':','}}\\n          <br>\\n        </a>\\n      </div>\\n    </div>\\n  </div>\\n  <br>\\n  <div class=\\\"container\\\">\\n    <div>\\n      <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" (click)=\\\"goBackToPreviousPage()\\\">Go Back</button>\\n    </div>\\n  </div>\\n</div>\"","import { GotService } from '../got.service';\nimport { Component, OnInit } from '@angular/core';\n//importing activated route and router\nimport { ActivatedRoute, Router } from '@angular/router';\n//importing location for go back button\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-card-view',\n  templateUrl: './card-view.component.html',\n  styleUrls: ['./card-view.component.css'],\n  //adding provider for go back button\n  providers: [Location]\n})\nexport class CardViewComponent implements OnInit {\n  // variable to store data for single card\n  public card: any;\n  //number to show number of elements of array at time of load\n  public show: number = 5;\n\n  constructor(private _route: ActivatedRoute, private _httpService: GotService, private location: Location, private router: Router) { }\n\n  ngOnInit() {\n    //capturing url as a paremeter from url\n    let url = this._route.snapshot.paramMap.get('url')\n    this._httpService.getSingleCard(url).subscribe(\n      data => {\n        this.card = data;\n        console.log(this.card)\n      },\n      error => {\n        console.log(error.errorMessage)\n      }\n    )\n  }\n  //go back button functionality\n  goBackToPreviousPage(): any {\n    this.location.back()\n  }\n}\n","// importing httpclient and http error response\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n//importing observable\nimport { Observable } from 'rxjs/internal/Observable';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GotService {\n  public baseUrl = 'https://anapioficeandfire.com/api';\n\n  constructor(private _http: HttpClient) {\n    console.log('http-service is called')\n  }\n  //method to get all books info\n  public getAllBooks(): any {\n    let allBooks = this._http.get(this.baseUrl + '/books')\n    console.log(allBooks)\n    return allBooks;\n  }\n  //method to get all characters info\n  public getAllCharacters(): any {\n    let allCharacters = this._http.get(this.baseUrl + '/characters')\n    console.log(allCharacters)\n    return allCharacters;\n  }\n  //method to get all houses info\n  public getAllHouses(): any {\n    let allHouses = this._http.get(this.baseUrl + '/houses')\n    console.log(allHouses)\n    return allHouses;\n  }\n  // method to get info of single card\n  public getSingleCard(url): any {\n    let card = this._http.get(this.baseUrl + '/' + url)\n    return card;\n  }\n  // method to handle error\n  private handleError(err: HttpErrorResponse) {\n    console.log(\"Handle error http calls\")\n    console.log(err.message);\n    return Observable.throw(err.message)\n  }\n}\n","module.exports = \".card-padding{\\n    padding:10px;\\n    transition: -webkit-transform .2s;\\n    transition: transform .2s;\\n    transition: transform .2s, -webkit-transform .2s;\\n}\\n.card-padding:hover {\\n    -webkit-transform: scale(1.1);\\n            transform: scale(1.1);\\n    z-index: 10;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0lBQ1osaUNBQXlCO0lBQXpCLHlCQUF5QjtJQUF6QixnREFBeUI7QUFDN0I7QUFDQTtJQUNJLDZCQUFxQjtZQUFyQixxQkFBcUI7SUFDckIsV0FBVztBQUNmIiwiZmlsZSI6InNyYy9hcHAvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2FyZC1wYWRkaW5ne1xuICAgIHBhZGRpbmc6MTBweDtcbiAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gLjJzO1xufVxuLmNhcmQtcGFkZGluZzpob3ZlciB7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxLjEpO1xuICAgIHotaW5kZXg6IDEwO1xufSJdfQ== */\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <!-- sort by button for sorting in ascending and descending starts here -->\\n    <div class=\\\"col-auto\\\">\\n      <div class=\\\"dropdown\\\">\\n        <button class=\\\"btn btn-secondary dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenuButton\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\"\\n          aria-expanded=\\\"false\\\">\\n          Sort By\\n        </button>\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenuButton\\\">\\n          <!-- setting instance variable to appropriate values for sorting -->\\n          <a class=\\\"dropdown-item\\\" style=\\\"cursor:pointer;\\\" (click)=\\\"sortName='name';sortBool=false\\\">Ascending</a>\\n          <a class=\\\"dropdown-item\\\" style=\\\"cursor:pointer;\\\" (click)=\\\"sortName='name';sortBool=true\\\">Descending</a>\\n        </div>\\n      </div>\\n    </div>\\n    <!-- sort by button for sorting in ascending and descending ends here -->\\n    <!-- Caregory button for filtering books, character or houses starts here -->\\n    <div class=\\\"col-auto\\\">\\n      <div class=\\\"dropdown\\\">\\n        <button class=\\\"btn btn-secondary dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenuButton\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\"\\n          aria-expanded=\\\"false\\\">\\n          Categories\\n        </button>\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenuButton\\\">\\n          <!-- calling respective fucntions on clicking -->\\n          <a class=\\\"dropdown-item\\\" style=\\\"cursor:pointer;\\\" (click)=\\\"ngOnInit()\\\">All</a>\\n          <a class=\\\"dropdown-item\\\" style=\\\"cursor:pointer;\\\" (click)=\\\"getBooks()\\\">Books</a>\\n          <a class=\\\"dropdown-item\\\" style=\\\"cursor:pointer;\\\" (click)=\\\"getCharacters()\\\">Characters</a>\\n          <a class=\\\"dropdown-item\\\" style=\\\"cursor:pointer;\\\" (click)=\\\"getHouses()\\\">Houses</a>\\n        </div>\\n      </div>\\n    </div>\\n    <!-- Caregory button for filtering books, character or houses ends here -->\\n  </div>\\n</div>\\n<!-- loader animation -->\\n<div class=\\\"container top-buffer d-flex justify-content-center\\\" *ngIf=\\\"allCards==undefined || allCards.length ==0\\\">\\n  <div class=\\\"loader\\\"></div>\\n</div>\\n<!-- single ngFor loop for all the cards -->\\n<div class=\\\"container\\\" *ngIf=\\\"allCards.length > 0\\\">\\n  <div class=\\\"row\\\">\\n    <!-- orderBy pipe for sorting -->\\n    <div *ngFor=\\\"let card of allCards | orderBy : sortName : sortBool\\\" class=\\\"col-lg-4 col-md-6 col-12 card-padding\\\">\\n      <!-- House card -->\\n      <div class=\\\"card border border-warning\\\" *ngIf=\\\"card.region\\\" style=\\\"height: 100%;\\\">\\n        <div class=\\\"card-header text-warning\\\">\\n          <h3>House</h3>\\n        </div>\\n        <img class=\\\"card-img-top\\\" src=\\\"./assets/images/house.jpg\\\" style=\\\"height:50%;\\\" alt=\\\"Card image cap\\\">\\n        <div class=\\\"card-body\\\" style=\\\"background-color: #F7DFB3;\\\">\\n          <h5 class=\\\"card-title text-muted\\\" *ngIf=\\\"card.name==''\\\">&nbsp;</h5>\\n          <h5 class=\\\"card-title\\\">{{card.name}}</h5>\\n          <p class=\\\"card-text\\\">Region:&nbsp;{{card.region}}</p>\\n          <a href=\\\"#\\\" class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/view',card.url.split('api/').pop()]\\\">View</a>\\n        </div>\\n      </div>\\n      <!-- Character Card -->\\n      <div class=\\\"card border border-success\\\" *ngIf=\\\"card.gender\\\" style=\\\"height: 100%;\\\">\\n        <div class=\\\"card-header text-success\\\">\\n          <h3>Character</h3>\\n        </div>\\n        <img class=\\\"card-img-top\\\" src=\\\"./assets/images/character.jpg\\\" style=\\\"height:50%;\\\" alt=\\\"Card image cap\\\">\\n        <div class=\\\"card-body\\\" style=\\\"background-color: #E1FFD3;\\\">\\n          <h5 class=\\\"card-title\\\">Name: {{card.name}}</h5>\\n          <p class=\\\"card-text\\\">Gender:&nbsp;{{card.gender}}</p>\\n          <a href=\\\"#\\\" class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/view',card.url.split('api/').pop()]\\\">View</a>\\n        </div>\\n      </div>\\n      <!-- Book Card -->\\n      <div class=\\\"card border border-danger\\\" *ngIf=\\\"card.isbn\\\" style=\\\"height: 100%;\\\">\\n        <div class=\\\"card-header text-danger\\\">\\n          <h3>Book</h3>\\n        </div>\\n        <img class=\\\"card-img-top\\\" src=\\\"./assets/images/book.png\\\" style=\\\"height:50%;\\\" alt=\\\"Card image cap\\\">\\n        <div class=\\\"card-body\\\" style=\\\"background-color: #FFECDD;\\\">\\n          <h5 class=\\\"card-title\\\">{{card.name}}</h5>\\n          <h5 class=\\\"card-title text-muted\\\" *ngIf=\\\"card.name==''\\\">&nbsp;</h5>\\n          <p class=\\\"card-text\\\">isbn:&nbsp;{{card.isbn}}</p>\\n          <a href=\\\"#\\\" class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/view',card.url.split('api/').pop()]\\\">View</a>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","//importing service\nimport { GotService } from '../got.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  //all cards array\n  public allCards = [];\n  //sortName for property name by which sorting needs to be done\n  public sortName: String = '';\n  //sortBool for setting ascending and descending\n  public sortBool: boolean = true;\n\n  constructor(private _httpService: GotService) { }\n\n  ngOnInit() {\n    //getting all the cards (houses+books+characters)\n    this._httpService.getAllBooks().subscribe(\n      data => {\n        this.allCards = data;\n        this._httpService.getAllCharacters().subscribe(\n          data => {\n            this.allCards = this.allCards.concat(data);\n            this._httpService.getAllHouses().subscribe(\n              data => {\n                this.allCards = this.allCards.concat(data);\n                console.log(this.allCards)\n              },\n              error => {\n                console.log(error.errorMessage)\n              }\n            )\n          },\n          error => {\n            console.log(error.errorMessage)\n          }\n        )\n      },\n      error => {\n        console.log(error.errorMessage)\n      }\n    )\n  }\n  //function to fetch all the books data\n  public getBooks() {\n    this._httpService.getAllBooks().subscribe(\n      data => {\n        this.allCards = data\n      },\n      error => {\n        console.log(error.errorMessage)\n      }\n    )\n  }\n  //function to fetch all the characters data\n  public getCharacters() {\n    this._httpService.getAllCharacters().subscribe(\n      data => {\n        this.allCards = data\n      },\n      error => {\n        console.log(error.errorMessage)\n      }\n    )\n  }\n  //function to fetch all the houses data\n  public getHouses() {\n    this._httpService.getAllHouses().subscribe(\n      data => {\n        this.allCards = data\n      },\n      error => {\n        console.log(error.errorMessage)\n      }\n    )\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25vdC1mb3VuZC9ub3QtZm91bmQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<!-- not found page view in case none of the routing paths match -->\\n<div class=\\\"container d-flex justify-content-center\\\">\\n  <div class=\\\"card text-center\\\" style=\\\"width:50%;\\\">\\n    <div class=\\\"card-header text-danger\\\">\\n      Please try again\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      <h5 class=\\\"card-title\\\">404 ERROR</h5>\\n      <p class=\\\"card-text\\\">Page not found</p>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}